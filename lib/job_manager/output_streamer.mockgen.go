// Code generated by MockGen. DO NOT EDIT.
// Source: output_streamer.go

// Package jobmanager is a generated GoMock package.
package jobmanager

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOutputStreamer is a mock of OutputStreamer interface.
type MockOutputStreamer struct {
	ctrl     *gomock.Controller
	recorder *MockOutputStreamerMockRecorder
}

// MockOutputStreamerMockRecorder is the mock recorder for MockOutputStreamer.
type MockOutputStreamerMockRecorder struct {
	mock *MockOutputStreamer
}

// NewMockOutputStreamer creates a new mock instance.
func NewMockOutputStreamer(ctrl *gomock.Controller) *MockOutputStreamer {
	mock := &MockOutputStreamer{ctrl: ctrl}
	mock.recorder = &MockOutputStreamerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOutputStreamer) EXPECT() *MockOutputStreamerMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockOutputStreamer) Send(output []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", output)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockOutputStreamerMockRecorder) Send(output interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockOutputStreamer)(nil).Send), output)
}
